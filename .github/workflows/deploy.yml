name: deploy
on: 
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - sandbox
          - staging
          - prod
      build-name:
        required: true
        type: string

permissions:
  id-token: write

jobs:
  get-lambda-name:
    runs-on: ubuntu-latest
    outputs:
      lambda-name: ${{ steps.get-lambda-name.outputs.lambda-name }}

    steps:
      - name: get lambda name from build name
        id: get-lambda-name
        run: |
          FULL_NAME="aviationapi-${{ inputs.build-name }}"
          echo "lambda-name=${FULL_NAME%-*-*-*}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: get-lambda-name
    env:
      AWS_PAGER: ""

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: configure aws credentials for deploy artifact download
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: ${{ vars.BUILD_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: download deploy artifact
        run: |
          aws s3api get-object  \
            --bucket ${{ vars.BUILD_S3_BUCKET_NAME }} \
            --key ${{ inputs.build-name }}.zip \
            --no-cli-pager \
            ${{ inputs.build-name }}.zip

      - name: configure aws credentials for deploy
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: ${{ vars.DEPLOY_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: deploy
        run: |
          aws lambda update-function-code \
            --function-name ${{ needs.get-lambda-name.outputs.lambda-name }} \
            --zip-file "fileb://${{ inputs.build-name }}.zip" \
            --no-cli-pager
