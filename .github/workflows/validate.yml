name: validate code

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string

jobs:
  check-format:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13.2
          cache: pip
          cache-dependency-path: |
            src/aviationapi/requirements.txt
            src/aviationapi/requirements.ci.txt

      - name: install dependencies
        run: pip install -r src/aviationapi/requirements.txt -r src/aviationapi/requirements.ci.txt

      - name: check formatting
        run: ./src/aviationapi/scripts/format.sh -c


  test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13.2
          cache: pip
          cache-dependency-path: |
            src/aviationapi/requirements.txt
            src/aviationapi/requirements.ci.txt

      - name: install dependencies
        run: pip install -r src/aviationapi/requirements.txt -r src/aviationapi/requirements.ci.txt

      - name: run tests
        run: pytest --junit-xml=test-results.xml
        env:
          AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCESS_KEY_ID: TESTINGANDNOTVALID
          AWS_SECRET_ACCESS_KEY: TESTINGANDNOTVALIDSECRET

      - name: generate test report
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          path: test-results.xml
          summary: true
          fail-on-empty: true
          title: PyTest Results
